using System;
using System.Text.RegularExpressions;
using System.Threading;
using System.IO;


class FallingRocks
{
    
    
    
    static Random randomChar = new Random();
    public static char GetLetter()
    {
        // This method returns a random lowercase letter.
        // ... Between 'a' and 'z' inclusize.
        int num = randomChar.Next(0, 26); // Zero to 25
        char let = (char)('a' + num);
        return let;
    }



    static void Main()
    {

        
        Console.BackgroundColor = ConsoleColor.Green;
        Console.ForegroundColor = ConsoleColor.DarkGreen;
        Console.BufferHeight = Console.WindowHeight = 40;
        Console.BufferWidth = Console.WindowWidth = 80;
        Console.Clear();

        Console.WriteLine("Score:");
        string stripe = new string('-', 80);
        Console.WriteLine(stripe);
        Console.ReadKey();
        Console.SetCursorPosition(40,39);

        ConsoleKeyInfo keyInfo;
        while ((keyInfo = Console.ReadKey(true)).Key != ConsoleKey.Escape)
        {
            switch (keyInfo.Key)
            {
                case ConsoleKey.RightArrow:
                    break;

                case ConsoleKey.LeftArrow:
                    break;
            }
        }
        
                
                 
                //Thread.Sleep(150);
   
    }       
            //Console.WriteLine(FallingRocks.GetLetter());
            //Console.WriteLine(FallingRocks.GetLetter());
            //Console.WriteLine(FallingRocks.GetLetter());
            //Console.WriteLine(FallingRocks.GetLetter());
            //Console.WriteLine(FallingRocks.GetLetter());
// Random genaration of chars

// Allowed chars 
        
            //char allowedChars = //generated by the genarator

           // Match match = Regex.Match(allowedChars, @"^, @, *, &, +, %, $, #, !, ., ;, - ",RegexOptions.None);

// console windows dimention
// Possition of the dwarf
// Moving of the dwarf --> allowed keys 
// Define constant game speed --> Thread.Sleep(150)
// Collision detection            
// Scoring system




        }

